/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java-library'
    id 'maven-publish'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator:2.6.2'
    implementation 'org.springframework.boot:spring-boot-starter-test:2.6.2'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.6.2'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:2.6.2'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.6.2'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.1'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:3.1.0'
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper:9.0.56'
    implementation 'javax.servlet:jstl:1.2'
    implementation group: 'mysql', name:'mysql-connector-java', version:'8.0.28'
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.6.2'
    implementation 'org.springframework.boot:spring-boot-starter-mail:2.6.2'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'
    compileOnly 'org.projectlombok:lombok:1.18.12'
    compileOnly 'org.springframework.boot:spring-boot-starter-tomcat:2.6.2'
    compileOnly group: 'com.google.code.gson', name: 'gson', version: '2.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools:2.6.2'
}

group = 'com.ap.user'
version = '0.0.1-SNAPSHOT'
description = 'APUserDetail'
java.sourceCompatibility = JavaVersion.VERSION_1_8

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}
